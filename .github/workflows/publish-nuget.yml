name: "Manual Package Publishing"

on:
  workflow_dispatch:
    inputs:
      package-version:
        description: "Package Version"
        required: true
      package-source:
        type: choice
        description: Package Source
        required: true
        default: "github"
        options:
        - nuget
        - github

env:
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  DOTNET_NOLOGO: true

jobs:
  publish-manual:
    name: "Publish to ${{ github.event.inputs.package-source }}"
    runs-on: ubuntu-22.04
    env:
      NUGET_PACKAGES: ${{ github.workspace }}/.nuget/packages

    permissions:
      contents: read
      packages: write

    steps:
      - name: "Checkout"
        uses: actions/checkout@v4

      - name: "Setup .NET SDK"
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: |
            8.0.x
            9.0.x

      - name: "Cache NuGet packages"
        uses: actions/cache@v4
        with:
          path: ${{ github.workspace }}/.nuget/packages
          key: ${{ runner.os }}-nugetv2-${{ hashFiles('**/Directory.Packages.props') }}-${{ hashFiles('**/*.csproj') }}-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nugetv2-

      - name: "Restore Dependencies"
        run: dotnet restore

      - name: "Build"
        run: dotnet build --configuration Release --no-restore

      - name: "Run Unit Tests"
        run:  dotnet test ./tests/Aspire.Hosting.LocalStack.Unit.Tests/Aspire.Hosting.LocalStack.Unit.Tests.csproj --verbosity normal --configuration Release --no-build

      - name: "Print Package Information"
        run: |
          echo "📦 Package: Aspire.Hosting.LocalStack"
          echo "🏷️ Version: ${{ github.event.inputs.package-version }}"
          echo "🎯 Target: ${{ github.event.inputs.package-source }}"
          echo "🔗 Repository: ${{ github.repository }}"

      - name: "Setup GitHub Packages Configuration"
        if: ${{ github.event.inputs.package-source == 'github' }}
        run: |
          echo "🔐 Adding GitHub Packages authentication..."
          dotnet nuget add source https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json \
            --name github-packages \
            --username ${{ github.actor }} \
            --password ${{ secrets.GITHUB_TOKEN }} \
            --store-password-in-clear-text

          echo "📝 Backing up original nuget.config..."
          cp nuget.config nuget.config.backup

          echo "🔧 Using GitHub-optimized nuget.config..."
          cp .github/nuget.config nuget.config

      - name: "Pack NuGet Package"
        run: |
          echo "🔨 Packing Aspire.Hosting.LocalStack package..."
          dotnet pack src/Aspire.Hosting.LocalStack/Aspire.Hosting.LocalStack.csproj \
            --configuration Release \
            --output ./artifacts \
            /p:PackageVersion=${{ github.event.inputs.package-version }}

      - name: "Publish to GitHub Packages"
        if: ${{ github.event.inputs.package-source == 'github' }}
        run: |
          echo "📦 Publishing to GitHub Packages..."
          dotnet nuget push ./artifacts/*.nupkg \
            --source github-packages \
            --api-key ${{ secrets.GITHUB_TOKEN }} \
            --skip-duplicate

      - name: "Publish to NuGet.org"
        if: ${{ github.event.inputs.package-source == 'nuget' }}
        run: |
          echo "📦 Publishing to NuGet.org..."
          dotnet nuget push ./artifacts/*.nupkg \
            --source https://api.nuget.org/v3/index.json \
            --api-key ${{ secrets.NUGET_API_KEY }} \
            --skip-duplicate

      - name: "Upload Package Artifacts"
        uses: actions/upload-artifact@v4
        with:
          name: "packages-aspire-hosting-localstack-${{ github.event.inputs.package-version }}"
          path: |
            artifacts/*.nupkg
            artifacts/*.snupkg
          retention-days: 30
